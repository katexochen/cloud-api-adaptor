# Copyright Confidential Containers Contributors
#
# SPDX-License-Identifier: Apache-2.0
#
# Builds pod vm image inside container
#
ARG BUILDER_IMG="quay.io/confidential-containers/podvm-builder-ubuntu"

FROM ${BUILDER_IMG} AS podvm_builder

ARG CLOUD_PROVIDER
ARG PODVM_DISTRO=ubuntu
ARG GUEST_COMPONENTS_VERSION="af35c0649bab2d000b5c350bc5e60db67ef9e1a5"
ARG GUEST_COMPONENTS_REPO="https://github.com/confidential-containers/guest-components"
ARG AA_KBC=offline_fs_kbc
ARG AA_TTRPC=false
# If not provided, uses system architecture
ARG ARCH=x86_64
ARG CAA_SRC=""
ARG CAA_SRC_REF=""

ENV CLOUD_PROVIDER ${CLOUD_PROVIDER}
ENV PODVM_DISTRO ${PODVM_DISTRO}
ENV GUEST_COMPONENTS_VERSION ${GUEST_COMPONENTS_VERSION}
ENV GUEST_COMPONENTS_REPO ${GUEST_COMPONENTS_REPO}
ENV AA_KBC ${AA_KBC}
ENV AA_TTRPC ${AA_TTRPC}
# ENV ARCH ${ARCH}
ENV LIBC=gnu

RUN if [ -n "${CAA_SRC}" ]; then \
      rm -rf cloud-api-adaptor && \
      git clone ${CAA_SRC} cloud-api-adaptor;\
    fi && \
    if [ -n "${CAA_SRC_REF}" ]; then \
      cd cloud-api-adaptor && \
      git fetch origin ${CAA_SRC_REF} && \
      git checkout FETCH_HEAD -b ${CAA_SRC_REF} ;\
    fi
# Installs add-ons for foreign target, if required
RUN ./cloud-api-adaptor/podvm/hack/cross-build-extras.sh

ENV AA_KBC "cc_kbc_az_snp_vtpm"
ENV AA_TTRPC "false"
RUN cd cloud-api-adaptor/podvm && \
    BINARIES= make binaries
RUN mv /src/cloud-api-adaptor/podvm/files/usr/local/bin/attestation-agent /src/cloud-api-adaptor/podvm/files/usr/local/bin/attestation-agent-vtpm

ENV AA_KBC "offline_fs_kbc"
ENV AA_TTRPC "true"
RUN cd cloud-api-adaptor/podvm && \
     make binaries

RUN tar czvf /podvm-binaries.tar.gz -C /src/cloud-api-adaptor/podvm/files usr/ etc/
RUN tar czvf /pause-bundle.tar.gz -C /src/cloud-api-adaptor/podvm/files pause_bundle/

FROM ubuntu:20.04
COPY --from=podvm_builder /podvm-binaries.tar.gz /
COPY --from=podvm_builder /pause-bundle.tar.gz /
